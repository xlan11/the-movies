{"ast":null,"code":"var _jsxFileName = \"C:\\\\Alan\\\\dev\\\\the-movies\\\\the-movies\\\\src\\\\components\\\\TopMovies.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TopMovies() {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"top_movies_section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"section_title\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83D\\uDD25 Top movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"movie_top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n\n//\n// FETCH TOP MOVIES\n//\n_c = TopMovies;\nconst apiKey = \"f9a8200a794828e016db6bb8fca5a95a\";\nfetch(`https://api.themoviedb.org/3/movie/top_rated?api_key=${apiKey}&language=en-US&page=1`).then(response => response.json()).then(data => {\n  const movies = data.results;\n  console.log(data);\n  for (let i = 0; i < 4; i++) {\n    const baseImageUrl = 'https://image.tmdb.org/t/p/';\n    const imageSize = 'w185';\n    const backdropSize = 'w500';\n    const backdroppath = movies[i].backdrop_path;\n    const posterPath = movies[i].poster_path;\n    const imageUrl = baseImageUrl + imageSize + posterPath;\n    const backdropImageUrl = baseImageUrl + backdropSize + backdroppath;\n    const topMovies = document.getElementById(\"movie_top\");\n    const topMovieItem = document.createElement(\"div\");\n    topMovieItem.className = \"related_movie\";\n    topMovies.appendChild(topMovieItem);\n    topMovieItem.innerHTML = `\n        <img src=\"${backdropImageUrl}\" />\n        <p>${movies[i].title}</p>\n        <p>Rating: ${movies[i].vote_average}</p>\n      `;\n  }\n}).catch(error => console.error(error));\nvar _c;\n$RefreshReg$(_c, \"TopMovies\");","map":{"version":3,"names":["React","TopMovies","apiKey","fetch","then","response","json","data","movies","results","console","log","i","baseImageUrl","imageSize","backdropSize","backdroppath","backdrop_path","posterPath","poster_path","imageUrl","backdropImageUrl","topMovies","document","getElementById","topMovieItem","createElement","className","appendChild","innerHTML","title","vote_average","catch","error"],"sources":["C:/Alan/dev/the-movies/the-movies/src/components/TopMovies.js"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default function TopMovies() {\r\n    return (\r\n        <section id=\"top_movies_section\">\r\n            <div id=\"section_title\">\r\n               <h4>ðŸ”¥ Top movies</h4>\r\n            </div>\r\n            <div id=\"movie_top\"></div>\r\n        </section>\r\n    )\r\n}\r\n\r\n//\r\n// FETCH TOP MOVIES\r\n//\r\nconst apiKey = \"f9a8200a794828e016db6bb8fca5a95a\"\r\nfetch(`https://api.themoviedb.org/3/movie/top_rated?api_key=${apiKey}&language=en-US&page=1`)\r\n  .then(response => response.json())\r\n  .then(data => {\r\n    const movies = data.results;\r\n    console.log(data)\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n      const baseImageUrl = 'https://image.tmdb.org/t/p/';\r\n      const imageSize = 'w185';\r\n      const backdropSize = 'w500';\r\n      const backdroppath = movies[i].backdrop_path;\r\n      const posterPath = movies[i].poster_path;\r\n      const imageUrl = baseImageUrl + imageSize + posterPath;\r\n      const backdropImageUrl = baseImageUrl + backdropSize + backdroppath;\r\n      const topMovies = document.getElementById(\"movie_top\");\r\n      const topMovieItem = document.createElement(\"div\")\r\n      \r\n      topMovieItem.className=\"related_movie\";\r\n\r\n      topMovies.appendChild(topMovieItem);\r\n      topMovieItem.innerHTML= \r\n      `\r\n        <img src=\"${backdropImageUrl}\" />\r\n        <p>${movies[i].title}</p>\r\n        <p>Rating: ${movies[i].vote_average}</p>\r\n      `  \r\n    }\r\n  })\r\n  .catch(error => console.error(error))"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,eAAe,SAASC,SAAS,GAAG;EAChC,oBACI;IAAS,EAAE,EAAC,oBAAoB;IAAA,wBAC5B;MAAK,EAAE,EAAC,eAAe;MAAA,uBACpB;QAAA,UAAI;MAAa;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QACnB,eACN;MAAK,EAAE,EAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QACpB;AAElB;;AAEA;AACA;AACA;AAAA,KAbwBA,SAAS;AAcjC,MAAMC,MAAM,GAAG,kCAAkC;AACjDC,KAAK,CAAE,wDAAuDD,MAAO,wBAAuB,CAAC,CAC1FE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;EACZ,MAAMC,MAAM,GAAGD,IAAI,CAACE,OAAO;EAC3BC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EAEjB,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1B,MAAMC,YAAY,GAAG,6BAA6B;IAClD,MAAMC,SAAS,GAAG,MAAM;IACxB,MAAMC,YAAY,GAAG,MAAM;IAC3B,MAAMC,YAAY,GAAGR,MAAM,CAACI,CAAC,CAAC,CAACK,aAAa;IAC5C,MAAMC,UAAU,GAAGV,MAAM,CAACI,CAAC,CAAC,CAACO,WAAW;IACxC,MAAMC,QAAQ,GAAGP,YAAY,GAAGC,SAAS,GAAGI,UAAU;IACtD,MAAMG,gBAAgB,GAAGR,YAAY,GAAGE,YAAY,GAAGC,YAAY;IACnE,MAAMM,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;IACtD,MAAMC,YAAY,GAAGF,QAAQ,CAACG,aAAa,CAAC,KAAK,CAAC;IAElDD,YAAY,CAACE,SAAS,GAAC,eAAe;IAEtCL,SAAS,CAACM,WAAW,CAACH,YAAY,CAAC;IACnCA,YAAY,CAACI,SAAS,GACrB;AACP,oBAAoBR,gBAAiB;AACrC,aAAab,MAAM,CAACI,CAAC,CAAC,CAACkB,KAAM;AAC7B,qBAAqBtB,MAAM,CAACI,CAAC,CAAC,CAACmB,YAAa;AAC5C,OAAO;EACH;AACF,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIvB,OAAO,CAACuB,KAAK,CAACA,KAAK,CAAC,CAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}